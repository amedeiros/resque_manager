ResqueUi
========

Resque UI is a Rails plugin port of the Sinatra app that is included in Chris Wanstrath's resque gem.  We love the gem and love the UI,
but just didn't want to add Sinatra to our stack.


Installation
=======

script/plugin install git://github.com/kevintyll/resque_ui.git

Once installed, you now have a resque controller, so you can get to the ui with:  http://your_domain/resque.

Dependencies
=======

This plugin requires the resque gem

sudo gem install resque

Additions
=======

The displaying of times is fixed.  Some browsers displayed "Nan days ago" for all process times in the original Sinatra app.
Fixed the stats/keys page.  The page wasn't showing the keys' types, size or values.

------------------------------

Added the ability to display process status in the worker "Processing" column on the workers and working pages.
To do this, yield the status message back in your perform method.

Class YourClass

  self.perform(arg)
  ...your code here
  yield "Your status message"
  ...more code
  yield "Another status message"
  ...more code
  end
end

This is really handy for those long running jobs to give you assurance the the job is really running or not.

------------------------------

Added the ability to restart failed jobs, and clear individual failed jobs from the list

------------------------------

Added the ability to stop, start, and restart workers from the workers page.  This requires capistrano, and capistrano-ext to be installed.
The controller calls cap tasks to manage the workers.  To include the recipes in you application, add this line to your deploy.rb file:
    require File.dirname(__FILE__) + '/../vendor/plugins/resque_ui/lib/resque_ui/cap_recipes'

You will also need to make sure you have your rake path set in the deploy.rb file.
    ex.  set :rake, "/opt/ruby-enterprise-1.8.6-20090421/bin/rake"

You will also need to tell resque_ui where cap is installed.  Add this line to your environments.rb file:
    ResqueUi::Cap.path           = '/opt/ruby-enterprise-1.8.6-20090421/bin/cap'
...using your own path of course.

The cap tasks included are:
 cap resque:work          # start a resque worker.
 cap resque:workers       # start multiple resque workers.
 cap resque:quit_worker   # Gracefully kill a worker.  If the worker is working, it will finish before shutting down.
 

Copyright (c) 2009 Chris Wanstrath
Copyright (c) 2010 Kevin Tyll, released under the MIT license

Much thanks goes to Brian Ketelsen for the ideas for the improved functionality for the UI.
